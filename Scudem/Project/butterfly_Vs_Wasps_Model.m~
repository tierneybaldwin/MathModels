
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% FUNCTION: 
%
% Author: 
% Institution: TCNJ
% Created: 
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

function butterfly_Vs_Wasps_Model()

%
% Clears any previous plots that are open in MATLAB
clf;

%
% Time Information / Initialization
%
TFinal = 200;        % Simulation runs until time = TFinal. ie runs for 200 days
dt = 1;             % Time-step, should be one day
t = 0;              % Initialize Time to 0. Time will be in days
n = 0;              % Ininitalize index counter

%
% Initial Values
%
Butterpop0 = 1200;  % Initial Population of Butterflies
Vpop0 = 600;       % Initial Population of Virgin Female Butterflies
Mpop0 = 0;          % Initial Population of Mated Female Butterflies
TbVpop0 = 600;      % Initial Population of female virgin T. brassicae
TbMpop0 = 0;        % Initial Population of female mated T. brassicae
TeVpop0 = 600;      % Initial Population of female virgin T. evanescens
TeMpop0 = 0;        % Initial Population of female mated T. evanescens

%
% Parameter Values
%
lambda = 35;         % number of eggs laid by butterfly
sigma = 0.25;        % rate at which the butterflies mate
phi = 29;            % number of eggs laid by Tb
theta = lambda - phi;

mu = 0.1;           % death rate

p1 = 0.071;          % likelihood that the butterfly's eggs are parasitized by T. brassicae 
p2 = 0.06;           % likelihood that the butterfly's eggs are parasitized by T. evanescens
                        % NOTE: p2 < p1 because T. evanescens need to have
                        % one successful ride before having an elevated rate
p3 = 1 - p1 - p2;    % likelihood that the butterfly's eggs are not parasitized

%
% Reference Variables
%                        
sevenDays = 0;      % shows it has not been 7 days yet
tenDays = 0;        % shows it has not been 10 days yet
                        
%
% Saves Initial Values into Storage Vectors
%
Butterpop(1) = Butterpop0;
Vpop(1) = Vpop0;
Mpop(1) = Mpop0;
storeMpop(1) = Mpop0;
 
TbVpop(1) = TbVpop0;
TbMpop(1) = TbMpop0;
storeTbMpop(1) = TbMpop0;

TeVpop(1) = TeVpop0;
TeMpop(1) = TeMpop0;
storeTeMpop(1) = TeMpop0;

TimeVec(1) = t;


%
% While-loop that iteratively solves the coupled, differential equation
% system
%
while t < TFinal

    % Iterate storage counter and time, t
    n = n + 1;
    t = t + dt;
    
    %
    % Solve Virgin female population ODE w/ Euler Method
    %
    if mod(t, 7) == 0
        sevenDays = 1;
    end
%     tepop = TeMpop(n)

    if sevenDays == 0
        % it has not been 7 days yet, the eggs have not begun to hatch

        Vpop(n+1) = Vpop(n) + dt * ( -1*(mu + sigma)*Vpop(n) );
    else
       n-6 
        % the eggs are hatching, we are assumng 1/2 are female
        Vpop(n+1) = Vpop(n) + dt * ( (0.5)*(p1*theta*(storeMpop(n-6) - storeTbMpop(n-6)) + p2*theta(storeMpop(n-6) - storeTeMpop(n-6)) + p3*lambda(storeMpop(n-6)) ) - mu*Vpop(n) - sigma*Vpop(n) );
        %Vpop(n+1) = Vpop(n) + dt * ( (0.5)*(p1*theta*(storeMpop(n-6) - storeTbMpop(n-6)) + p2*theta(storeMpop(n-6) - storeTeMpop(n-6)) + p3*lambda(storeMpop(n-6)) ) - mu*Vpop(n) - sigma*Vpop(n) );
    end

    %
    % Solve Mated female Butterfly population ODE w/ Euler Method
    %
     Mpop(n+1) = Mpop(n) + dt * ( sigma*Vpop(n) );
    
     
    
    %
    % Solve virgin T.B. population ODE w/ Euler Method
    %
    if mod(dt, 10) == 0
        tenDays = 1;
    end
    
    if tenDays == 0
        % it has not been 10 days yet, the eggs have not begun to hatch
        TbVpop(n+1) = TbVpop(n) + dt * ( -mu*TbVpop(n) - sigma*TbVpop(n) ); 
    else 
        % the eggs are hatching, 24 out of the 29 will be female
        TbVpop(n+1) = TbVpop(n) + dt * ( (24/29)*(p1*storeTbMpop(n-9)) - mu*TbVpop(n) - sigma*TbVpop(n) );
    end        

    %
    % Solve mated T.B. population ODE w/ Euler Method
    %   
        TbMpop(n+1) = TbMpop(n) + dt * ( sigma*TbVpop(n) );  
   
    
    %
    % Solve T.E. population ODE w/ Euler Method
    %
    if mod(dt, 10) == 0
        tenDays = 1;
    end
    
    if tenDays == 0
        % it has not been 10 days yet, the eggs have not begun to hatch
        TeVpop(n+1) = TeVpop(n) + dt * ( -mu*TeVpop(n) - sigma*TeVpop(n) ); 
    else 
        % the eggs are hatching, 24 out of the 29 will be female
        TeVpop(n+1) = TeVpop(n) + dt * ( (24/29)*(p2*storeTeMpop(n-9)) - mu*TeVpop(n) - sigma*TbVpop(n) );
    end
    
    %
    % Solve mated T.B. population ODE w/ Euler Method
    %   
        TeMpop(n+1) = TeMpop(n) + dt * ( sigma*TeVpop(n) );  
     
        
     
    %
    % Solve Overall Butterfly population ODE w/ Euler Method (eggs parasitized by T.E.)
    %    
    Butterpop(n+1) =  2*Vpop(n+1) ;
%     vpop = Vpop(n)
%     mpop = Mpop(n)
%     butter = Butterpop(n)
    
    % Butterflies/Wasps die after laying their eggs
    storeMpop(n+1) = Mpop(n+1);
    Mpop(n+1) = 0; 
    storeTbMpop(n+1) = TbMpop(n+1);
    TbMpop(n+1) = 0;
    storeTeMpop(n+1) = TeMpop(n+1);
    TeMpop(n+1) = 0 ; 
    
    % Next time in time storage vector
    TimeVec(n+1) = t;
   pause();
end


%
% Plot Attributes
%
lw = 4;  % LineWidth (how thick the lines should be)
ms = 25; % MarkerSize (how big the plot points should be)
fs = 18; % FontSize (how big the font should be for labels)

%
% PLOT 1: Populations vs. Time
%
figure(1)
plot(TimeVec,Butterpop,'b.-','LineWidth',lw,'MarkerSize',ms); hold on;
xlabel('Time');
ylabel('Population');
leg = legend('Butterfly');
set(gca,'FontSize',fs);
set(leg,'FontSize',fs);
